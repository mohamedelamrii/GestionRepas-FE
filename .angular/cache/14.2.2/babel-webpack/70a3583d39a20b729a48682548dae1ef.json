{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { PlanningDto } from '../model/Planning.model';\nimport { PlanningCriteria } from '../criteria/Planning.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./role.service\";\nexport let PlanningService = /*#__PURE__*/(() => {\n  class PlanningService {\n    constructor(http, roleService) {\n      this.http = http;\n      this.roleService = roleService;\n      this.API = '';\n      this.editPlanning$ = new BehaviorSubject(false);\n      this.role$ = this.roleService.role$;\n      this.role$.subscribe(role => {\n        this.API = environment.apiUrl + role.toLowerCase() + '/planning/';\n      });\n    }\n\n    findPaginatedByCriteria(criteria) {\n      return this.http.post(this.API + 'find-paginated-by-criteria', criteria);\n    }\n\n    findAll() {\n      return this.http.get(this.API);\n    }\n\n    save() {\n      return this.http.post(this.API, this.selectedPlanning);\n    }\n\n    delete(planning) {\n      return this.http.delete(this.API + 'id/' + planning.id);\n    }\n\n    edit() {\n      return this.http.put(this.API, this.selectedPlanning);\n    }\n\n    findByCriteria(planning) {\n      return this.http.post(this.API + 'find-by-criteria', planning);\n    }\n\n    findByIdWithAssociatedList(planning) {\n      return this.http.get(this.API + 'id/' + planning.id);\n    }\n\n    deleteMultiple() {\n      return this.http.post(this.API + 'multiple', this.planningSelections);\n    }\n\n    get plannings() {\n      if (this._plannings == null) {\n        this._plannings = new Array();\n      }\n\n      return this._plannings;\n    }\n\n    set plannings(value) {\n      this._plannings = value;\n    }\n\n    get selectedPlanning() {\n      if (this._selectedPlanning == null) {\n        this._selectedPlanning = new PlanningDto();\n      }\n\n      return this._selectedPlanning;\n    }\n\n    set selectedPlanning(value) {\n      this._selectedPlanning = value;\n    }\n\n    get planningSelections() {\n      if (this._planningSelections == null) {\n        this._planningSelections = new Array();\n      }\n\n      return this._planningSelections;\n    }\n\n    set planningSelections(value) {\n      this._planningSelections = value;\n    }\n\n    get createPlanningDialog() {\n      return this._createPlanningDialog;\n    }\n\n    set createPlanningDialog(value) {\n      this._createPlanningDialog = value;\n    }\n\n    get editPlanningDialog() {\n      return this._editPlanningDialog;\n    }\n\n    set editPlanningDialog(value) {\n      this._editPlanningDialog = value;\n    }\n\n    get viewPlanningDialog() {\n      return this._viewPlanningDialog;\n    }\n\n    set viewPlanningDialog(value) {\n      this._viewPlanningDialog = value;\n    }\n\n    get search() {\n      if (this._search == null) {\n        this._search = new PlanningCriteria();\n      }\n\n      return this._search;\n    }\n\n    set search(value) {\n      this._search = value;\n    }\n\n  }\n\n  PlanningService.ɵfac = function PlanningService_Factory(t) {\n    return new (t || PlanningService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.RoleService));\n  };\n\n  PlanningService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PlanningService,\n    factory: PlanningService.ɵfac,\n    providedIn: 'root'\n  });\n  return PlanningService;\n})();","map":null,"metadata":{},"sourceType":"module"}