{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Role } from '../../../controller/model/Role.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/controller/service/Auth.service\";\nimport * as i2 from \"primeng/button\";\nimport * as i3 from \"primeng/password\";\nimport * as i4 from \"primeng/inputtext\";\nimport * as i5 from \"@angular/forms\";\nexport let RegisterResponsableComponent = /*#__PURE__*/(() => {\n  class RegisterResponsableComponent {\n    constructor(authService) {\n      this.authService = authService;\n      this.registerForm = new FormGroup({\n        prenom: new FormControl('', Validators.required),\n        nom: new FormControl('', Validators.required),\n        email: new FormControl('', Validators.required),\n        userName: new FormControl('', Validators.required),\n        password: new FormControl('', Validators.required)\n      });\n    }\n\n    ngOnInit() {}\n\n    submit() {\n      const formValues = this.registerForm.value;\n      const {\n        prenom,\n        nom,\n        userName,\n        password,\n        email\n      } = formValues;\n      const role = new Role();\n      role.authority = 'ROLE_Responsable';\n      this.user.prenom = prenom;\n      this.user.nom = nom;\n      this.user.username = userName;\n      this.user.password = password;\n      this.user.email = email;\n      this.user.roles = [role];\n      this.authService.registerResponsable();\n    }\n\n    get user() {\n      return this.authService.user;\n    }\n\n    set user(value) {\n      this.authService.user = value;\n    }\n\n  }\n\n  RegisterResponsableComponent.ɵfac = function RegisterResponsableComponent_Factory(t) {\n    return new (t || RegisterResponsableComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n  };\n\n  RegisterResponsableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterResponsableComponent,\n    selectors: [[\"app-register-responsable\"]],\n    decls: 34,\n    vars: 2,\n    consts: [[1, \"login-body\"], [1, \"card\", \"login-panel\", \"p-fluid\"], [1, \"p-mt-4\"], [1, \"p-grid\", 3, \"formGroup\"], [1, \"p-col-12\", \"p-sm-6\", \"p-md-6\", \"logo-container\"], [1, \"guest-sign-in\", 2, \"font-weight\", \"600\", \"font-size\", \"2rem\"], [1, \"p-col-12\", \"username-container\"], [1, \"login-input\"], [\"formControlName\", \"prenom\", \"type\", \"text\", \"pInputText\", \"\", \"id\", \"1\", \"required\", \"\", \"autofocus\", \"\", 1, \"p-mb-2\", \"p-mr-2\"], [\"formControlName\", \"nom\", \"type\", \"text\", \"pInputText\", \"\", \"id\", \"1\", \"required\", \"\", \"autofocus\", \"\", 1, \"p-mb-2\", \"p-mr-2\"], [\"formControlName\", \"userName\", \"type\", \"text\", \"pInputText\", \"\", \"id\", \"1\", \"required\", \"\", \"autofocus\", \"\", 1, \"p-mb-2\", \"p-mr-2\"], [\"formControlName\", \"email\", \"type\", \"email\", \"pInputText\", \"\", \"id\", \"1\", \"required\", \"\", \"autofocus\", \"\", 1, \"p-mb-2\", \"p-mr-2\"], [1, \"p-col-12\", \"password-container\"], [\"formControlName\", \"password\", \"pPassword\", \"\", \"type\", \"password\"], [1, \"p-col-12\", \"p-sm-6\", \"p-md-6\"], [\"pButton\", \"\", \"type\", \"button\", \"icon\", \"pi pi-check\", \"label\", \"Register\", 3, \"disabled\", \"click\"]],\n    template: function RegisterResponsableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"span\", 5);\n        i0.ɵɵtext(6, \"Inscription\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"label\");\n        i0.ɵɵtext(9, \"prenom\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 7);\n        i0.ɵɵelement(11, \"input\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 6)(13, \"label\");\n        i0.ɵɵtext(14, \"nom\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 7);\n        i0.ɵɵelement(16, \"input\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 6)(18, \"label\");\n        i0.ɵɵtext(19, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 7);\n        i0.ɵɵelement(21, \"input\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 6)(23, \"label\");\n        i0.ɵɵtext(24, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 7);\n        i0.ɵɵelement(26, \"input\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"div\", 12)(28, \"label\");\n        i0.ɵɵtext(29, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 7);\n        i0.ɵɵelement(31, \"input\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(32, \"div\", 14)(33, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function RegisterResponsableComponent_Template_button_click_33_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n        i0.ɵɵadvance(30);\n        i0.ɵɵproperty(\"disabled\", ctx.registerForm.invalid);\n      }\n    },\n    dependencies: [i2.ButtonDirective, i3.Password, i4.InputText, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.FormGroupDirective, i5.FormControlName]\n  });\n  return RegisterResponsableComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}