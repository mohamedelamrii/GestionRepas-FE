{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { ResponsablePlanningDto } from '../model/ResponsablePlanning.model';\nimport { ResponsablePlanningCriteria } from '../criteria/ResponsablePlanning.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./role.service\";\nexport let ResponsablePlanningService = /*#__PURE__*/(() => {\n  class ResponsablePlanningService {\n    constructor(http, roleService) {\n      this.http = http;\n      this.roleService = roleService;\n      this.API = '';\n      this.editResponsablePlanning$ = new BehaviorSubject(false);\n      this.role$ = this.roleService.role$;\n      this.role$.subscribe(role => {\n        this.API = environment.apiUrl + role.toLowerCase() + '/responsablePlanning/';\n      });\n    }\n\n    findPaginatedByCriteria(criteria) {\n      return this.http.post(this.API + 'find-paginated-by-criteria', criteria);\n    }\n\n    findAll() {\n      return this.http.get(this.API);\n    }\n\n    save() {\n      return this.http.post(this.API, this.selectedResponsablePlanning);\n    }\n\n    delete(responsablePlanning) {\n      return this.http.delete(this.API + 'id/' + responsablePlanning.id);\n    }\n\n    edit() {\n      return this.http.put(this.API, this.selectedResponsablePlanning);\n    }\n\n    findByCriteria(responsablePlanning) {\n      return this.http.post(this.API + 'find-by-criteria', responsablePlanning);\n    }\n\n    findByIdWithAssociatedList(responsablePlanning) {\n      return this.http.get(this.API + 'id/' + responsablePlanning.id);\n    }\n\n    deleteMultiple() {\n      return this.http.post(this.API + 'multiple', this.responsablePlanningSelections);\n    }\n\n    get responsablePlannings() {\n      if (this._responsablePlannings == null) {\n        this._responsablePlannings = new Array();\n      }\n\n      return this._responsablePlannings;\n    }\n\n    set responsablePlannings(value) {\n      this._responsablePlannings = value;\n    }\n\n    get selectedResponsablePlanning() {\n      if (this._selectedResponsablePlanning == null) {\n        this._selectedResponsablePlanning = new ResponsablePlanningDto();\n      }\n\n      return this._selectedResponsablePlanning;\n    }\n\n    set selectedResponsablePlanning(value) {\n      this._selectedResponsablePlanning = value;\n    }\n\n    get responsablePlanningSelections() {\n      if (this._responsablePlanningSelections == null) {\n        this._responsablePlanningSelections = new Array();\n      }\n\n      return this._responsablePlanningSelections;\n    }\n\n    set responsablePlanningSelections(value) {\n      this._responsablePlanningSelections = value;\n    }\n\n    get createResponsablePlanningDialog() {\n      return this._createResponsablePlanningDialog;\n    }\n\n    set createResponsablePlanningDialog(value) {\n      this._createResponsablePlanningDialog = value;\n    }\n\n    get editResponsablePlanningDialog() {\n      return this._editResponsablePlanningDialog;\n    }\n\n    set editResponsablePlanningDialog(value) {\n      this._editResponsablePlanningDialog = value;\n    }\n\n    get viewResponsablePlanningDialog() {\n      return this._viewResponsablePlanningDialog;\n    }\n\n    set viewResponsablePlanningDialog(value) {\n      this._viewResponsablePlanningDialog = value;\n    }\n\n    get search() {\n      if (this._search == null) {\n        this._search = new ResponsablePlanningCriteria();\n      }\n\n      return this._search;\n    }\n\n    set search(value) {\n      this._search = value;\n    }\n\n  }\n\n  ResponsablePlanningService.ɵfac = function ResponsablePlanningService_Factory(t) {\n    return new (t || ResponsablePlanningService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.RoleService));\n  };\n\n  ResponsablePlanningService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ResponsablePlanningService,\n    factory: ResponsablePlanningService.ɵfac,\n    providedIn: 'root'\n  });\n  return ResponsablePlanningService;\n})();","map":null,"metadata":{},"sourceType":"module"}