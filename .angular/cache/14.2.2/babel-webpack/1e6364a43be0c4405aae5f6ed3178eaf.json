{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { RepasDto } from 'src/app/controller/model/Repas.model';\nimport { environment } from 'src/environments/environment';\nimport { CategoriePatientDto } from 'src/app/controller/model/CategoriePatient.model';\nimport { TypeRepasDto } from 'src/app/controller/model/TypeRepas.model';\nimport { RepasCategoriePatientDto } from 'src/app/controller/model/RepasCategoriePatient.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"src/app/controller/service/Repas.service\";\nimport * as i3 from \"src/app/controller/service/StringUtil.service\";\nimport * as i4 from \"src/app/controller/service/role.service\";\nimport * as i5 from \"primeng/api\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"src/app/controller/service/CategoriePatient.service\";\nimport * as i8 from \"src/app/controller/service/TypeRepas.service\";\nimport * as i9 from \"src/app/controller/service/RepasCategoriePatient.service\";\nimport * as i10 from \"primeng/button\";\nimport * as i11 from \"primeng/dialog\";\nimport * as i12 from \"primeng/inputtext\";\nimport * as i13 from \"@angular/forms\";\nimport * as i14 from \"primeng/dropdown\";\nimport * as i15 from \"primeng/tabview\";\nimport * as i16 from \"primeng/inputtextarea\";\nimport * as i17 from \"primeng/multiselect\";\nimport * as i18 from \"../../type-repas-responsable/create-responsable/type-repas-create-responsable.component\";\nimport * as i19 from \"../../categorie-patient-responsable/create-responsable/categorie-patient-create-responsable.component\";\n\nfunction RepasCreateResponsableComponent_ng_template_1_small_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 20);\n    i0.ɵɵtext(1, \"Libelle est obligatoire.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"ng-invalid ng-dirty\": a0\n  };\n};\n\nfunction RepasCreateResponsableComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-tabView\")(1, \"p-tabPanel\", 3)(2, \"div\", 4)(3, \"div\", 5)(4, \"label\", 6);\n    i0.ɵɵtext(5, \"Libelle\");\n    i0.ɵɵelementStart(6, \"span\", 7);\n    i0.ɵɵtext(7, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function RepasCreateResponsableComponent_ng_template_1_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.selectedRepas.libelle = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, RepasCreateResponsableComponent_ng_template_1_small_9_Template, 2, 0, \"small\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 10)(11, \"label\", 11);\n    i0.ɵɵtext(12, \"Type repas\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"p-dropdown\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function RepasCreateResponsableComponent_ng_template_1_Template_p_dropdown_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.selectedRepas.typeRepas = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 13);\n    i0.ɵɵelement(15, \"label\");\n    i0.ɵɵelementStart(16, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function RepasCreateResponsableComponent_ng_template_1_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.openCreateTypeRepas(\"typeRepas\"));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 5)(18, \"label\", 15);\n    i0.ɵɵtext(19, \"Image\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"input\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function RepasCreateResponsableComponent_ng_template_1_Template_input_ngModelChange_20_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.selectedRepas.image = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(21, \"div\", 5)(22, \"label\", 17);\n    i0.ɵɵtext(23, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"textarea\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function RepasCreateResponsableComponent_ng_template_1_Template_textarea_ngModelChange_24_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.selectedRepas.description = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(25, \"div\", 5)(26, \"label\");\n    i0.ɵɵtext(27, \"Categorie patient\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"p-multiSelect\", 19);\n    i0.ɵɵlistener(\"ngModelChange\", function RepasCreateResponsableComponent_ng_template_1_Template_p_multiSelect_ngModelChange_28_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.selectedRepas.repasCategoriePatients = $event);\n    });\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.selectedRepas.libelle)(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, !ctx_r0.validRepasLibelle));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.validRepasLibelle);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"options\", ctx_r0.typeRepass)(\"ngModel\", ctx_r0.selectedRepas.typeRepas)(\"filter\", true)(\"showClear\", true);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.selectedRepas.image);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.selectedRepas.description);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"options\", ctx_r0.repasCategoriePatients)(\"ngModel\", ctx_r0.selectedRepas.repasCategoriePatients)(\"virtualScroll\", true);\n  }\n}\n\nfunction RepasCreateResponsableComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\")(2, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function RepasCreateResponsableComponent_ng_template_2_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.hideCreateDialog());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"div\")(4, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function RepasCreateResponsableComponent_ng_template_2_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.save());\n    });\n    i0.ɵɵelementEnd()()();\n  }\n}\n\nconst _c1 = function () {\n  return {\n    width: \"70vw\"\n  };\n};\n\nexport let RepasCreateResponsableComponent = /*#__PURE__*/(() => {\n  class RepasCreateResponsableComponent {\n    constructor(datePipe, repasService, stringUtilService, roleService, messageService, router, categoriePatientService, typeRepasService, repasCategoriePatientService) {\n      this.datePipe = datePipe;\n      this.repasService = repasService;\n      this.stringUtilService = stringUtilService;\n      this.roleService = roleService;\n      this.messageService = messageService;\n      this.router = router;\n      this.categoriePatientService = categoriePatientService;\n      this.typeRepasService = typeRepasService;\n      this.repasCategoriePatientService = repasCategoriePatientService;\n      this.selectedRepasCategoriePatients = new RepasCategoriePatientDto();\n      this._submitted = false;\n      this._errorMessages = new Array();\n      this._validRepasLibelle = true;\n      this._validTypeRepasLibelle = true;\n      this._validTypeRepasCode = true;\n      this._repasCategoriePatients = [];\n    }\n\n    ngOnInit() {\n      this.categoriePatientService.findAll().subscribe(data => this.prepareRepasCategoriePatients(data));\n      this.selectedRepasCategoriePatients.categoriePatient = new CategoriePatientDto();\n      this.categoriePatientService.findAll().subscribe(data => this.categoriePatients = data);\n      this.selectedTypeRepas = new TypeRepasDto();\n      this.typeRepasService.findAll().subscribe(data => this.typeRepass = data);\n    }\n\n    prepareRepasCategoriePatients(categoriePatients) {\n      if (categoriePatients != null) {\n        categoriePatients.forEach(e => {\n          const repasCategoriePatient = new RepasCategoriePatientDto();\n          repasCategoriePatient.categoriePatient = e;\n          this.repasCategoriePatients.push(repasCategoriePatient);\n        });\n      }\n    }\n\n    setValidation(value) {\n      this.validRepasLibelle = value;\n    }\n\n    save() {\n      this.submitted = true;\n      this.validateForm();\n\n      if (this.errorMessages.length === 0) {\n        this.saveWithShowOption(false);\n      } else {\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Erreurs',\n          detail: 'Merci de corrigé les erreurs sur le formulaire'\n        });\n      }\n    }\n\n    saveWithShowOption(showList) {\n      this.repasService.save().subscribe(repas => {\n        if (repas != null) {\n          this.repass.push(Object.assign({}, repas));\n          this.createRepasDialog = false;\n          this.submitted = false;\n          this.selectedRepas = new RepasDto();\n        } else {\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Erreurs',\n            detail: 'Repas existe déjà'\n          });\n        }\n      }, error => {\n        console.log(error);\n      });\n    }\n\n    validateForm() {\n      this.errorMessages = new Array();\n      this.validateRepasLibelle();\n    }\n\n    validateRepasLibelle() {\n      if (this.stringUtilService.isEmpty(this.selectedRepas.libelle)) {\n        this.errorMessages.push('Libelle non valide');\n        this.validRepasLibelle = false;\n      } else {\n        this.validRepasLibelle = true;\n      }\n    }\n\n    openCreateTypeRepas(typeRepas) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const isPermistted = yield this.roleService.isPermitted('TypeRepas', 'add');\n\n        if (isPermistted) {\n          this.selectedTypeRepas = new TypeRepasDto();\n          this.createTypeRepasDialog = true;\n        } else {\n          this.messageService.add({\n            severity: 'error',\n            summary: 'erreur',\n            detail: 'problème de permission'\n          });\n        }\n      });\n    }\n\n    openCreateCategoriePatient(categoriePatient) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const isPermistted = yield this.roleService.isPermitted('CategoriePatient', 'add');\n\n        if (isPermistted) {\n          this.selectedCategoriePatient = new CategoriePatientDto();\n          this.createCategoriePatientDialog = true;\n        } else {\n          this.messageService.add({\n            severity: 'error',\n            summary: 'erreur',\n            detail: 'problème de permission'\n          });\n        }\n      });\n    }\n\n    hideCreateDialog() {\n      this.createRepasDialog = false;\n      this.setValidation(true);\n    }\n\n    get repass() {\n      return this.repasService.repass;\n    }\n\n    set repass(value) {\n      this.repasService.repass = value;\n    }\n\n    get selectedRepas() {\n      return this.repasService.selectedRepas;\n    }\n\n    set selectedRepas(value) {\n      this.repasService.selectedRepas = value;\n    }\n\n    get createRepasDialog() {\n      return this.repasService.createRepasDialog;\n    }\n\n    set createRepasDialog(value) {\n      this.repasService.createRepasDialog = value;\n    }\n\n    get selectedTypeRepas() {\n      return this.typeRepasService.selectedTypeRepas;\n    }\n\n    set selectedTypeRepas(value) {\n      this.typeRepasService.selectedTypeRepas = value;\n    }\n\n    get typeRepass() {\n      return this.typeRepasService.typeRepass;\n    }\n\n    set typeRepass(value) {\n      this.typeRepasService.typeRepass = value;\n    }\n\n    get createTypeRepasDialog() {\n      return this.typeRepasService.createTypeRepasDialog;\n    }\n\n    set createTypeRepasDialog(value) {\n      this.typeRepasService.createTypeRepasDialog = value;\n    }\n\n    get selectedCategoriePatient() {\n      return this.categoriePatientService.selectedCategoriePatient;\n    }\n\n    set selectedCategoriePatient(value) {\n      this.categoriePatientService.selectedCategoriePatient = value;\n    }\n\n    get categoriePatients() {\n      return this.categoriePatientService.categoriePatients;\n    }\n\n    set categoriePatients(value) {\n      this.categoriePatientService.categoriePatients = value;\n    }\n\n    get createCategoriePatientDialog() {\n      return this.categoriePatientService.createCategoriePatientDialog;\n    }\n\n    set createCategoriePatientDialog(value) {\n      this.categoriePatientService.createCategoriePatientDialog = value;\n    }\n\n    get dateFormat() {\n      return environment.dateFormatCreate;\n    }\n\n    get dateFormatColumn() {\n      return environment.dateFormatCreate;\n    }\n\n    get submitted() {\n      return this._submitted;\n    }\n\n    set submitted(value) {\n      this._submitted = value;\n    }\n\n    get repasCategoriePatients() {\n      if (this._repasCategoriePatientsDto == null) this._repasCategoriePatientsDto = new Array();\n      return this._repasCategoriePatientsDto;\n    }\n\n    set repasCategoriePatients(value) {\n      this._repasCategoriePatientsDto = value;\n    }\n\n    get errorMessages() {\n      return this._errorMessages;\n    }\n\n    set errorMessages(value) {\n      this._errorMessages = value;\n    }\n\n    get validRepasLibelle() {\n      return this._validRepasLibelle;\n    }\n\n    set validRepasLibelle(value) {\n      this._validRepasLibelle = value;\n    }\n\n    get validTypeRepasLibelle() {\n      return this._validTypeRepasLibelle;\n    }\n\n    set validTypeRepasLibelle(value) {\n      this._validTypeRepasLibelle = value;\n    }\n\n    get validTypeRepasCode() {\n      return this._validTypeRepasCode;\n    }\n\n    set validTypeRepasCode(value) {\n      this._validTypeRepasCode = value;\n    }\n\n  }\n\n  RepasCreateResponsableComponent.ɵfac = function RepasCreateResponsableComponent_Factory(t) {\n    return new (t || RepasCreateResponsableComponent)(i0.ɵɵdirectiveInject(i1.DatePipe), i0.ɵɵdirectiveInject(i2.RepasService), i0.ɵɵdirectiveInject(i3.StringUtilService), i0.ɵɵdirectiveInject(i4.RoleService), i0.ɵɵdirectiveInject(i5.MessageService), i0.ɵɵdirectiveInject(i6.Router), i0.ɵɵdirectiveInject(i7.CategoriePatientService), i0.ɵɵdirectiveInject(i8.TypeRepasService), i0.ɵɵdirectiveInject(i9.RepasCategoriePatientService));\n  };\n\n  RepasCreateResponsableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RepasCreateResponsableComponent,\n    selectors: [[\"app-repas-create-responsable\"]],\n    decls: 5,\n    vars: 8,\n    consts: [[\"header\", \"Repas\", \"styleClass\", \"p-fluid\", 3, \"visible\", \"modal\", \"maximizable\", \"draggable\", \"resizable\", \"visibleChange\"], [\"pTemplate\", \"content\"], [\"pTemplate\", \"footer\"], [\"header\", \"Repas\"], [1, \"p-grid\"], [1, \"p-field\", \"p-col-12\", \"p-md-6\"], [\"for\", \"1\"], [2, \"color\", \"red\"], [\"type\", \"text\", \"pInputText\", \"\", \"placeholder\", \"Libelle\", \"id\", \"1\", 1, \"p-mb-2\", \"p-mr-2\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"class\", \"p-error\", 4, \"ngIf\"], [1, \"p-field\", \"p-col-11\", \"p-md-5\"], [\"for\", \"2\"], [\"id\", \"2\", \"filterMatchMode\", \"contains\", \"optionLabel\", \"libelle\", \"placeholder\", \"Type repas\", 3, \"options\", \"ngModel\", \"filter\", \"showClear\", \"ngModelChange\"], [1, \"p-col-1\"], [\"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"icon\", \"pi pi-plus\", 1, \"p-button-success\", \"one-colonne-btn-success-align\", 3, \"click\"], [\"for\", \"3\"], [\"type\", \"text\", \"pInputText\", \"\", \"placeholder\", \"Image\", \"id\", \"3\", 1, \"p-mb-2\", \"p-mr-2\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"4\"], [\"id\", \"4\", \"pInputTextarea\", \"\", \"rows\", \"5\", \"cols\", \"30\", \"placeholder\", \"Description\", 3, \"ngModel\", \"ngModelChange\"], [\"itemSize\", \"30\", \"defaultLabel\", \"Select un categoriePatient\", \"optionLabel\", \"categoriePatient.libelle\", \"display\", \"chip\", 3, \"options\", \"ngModel\", \"virtualScroll\", \"ngModelChange\"], [1, \"p-error\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Annuler\", \"icon\", \"pi pi-times\", 1, \"p-button-text\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Valider\", \"icon\", \"pi pi-check\", 2, \"margin\", \"10px\", 3, \"click\"]],\n    template: function RepasCreateResponsableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p-dialog\", 0);\n        i0.ɵɵlistener(\"visibleChange\", function RepasCreateResponsableComponent_Template_p_dialog_visibleChange_0_listener($event) {\n          return ctx.createRepasDialog = $event;\n        });\n        i0.ɵɵtemplate(1, RepasCreateResponsableComponent_ng_template_1_Template, 29, 14, \"ng-template\", 1);\n        i0.ɵɵtemplate(2, RepasCreateResponsableComponent_ng_template_2_Template, 5, 0, \"ng-template\", 2);\n        i0.ɵɵelement(3, \"app-type-repas-create-responsable\")(4, \"app-categorie-patient-create-responsable\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c1));\n        i0.ɵɵproperty(\"visible\", ctx.createRepasDialog)(\"modal\", true)(\"maximizable\", true)(\"draggable\", false)(\"resizable\", false);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgIf, i5.PrimeTemplate, i10.ButtonDirective, i11.Dialog, i12.InputText, i13.DefaultValueAccessor, i13.NgControlStatus, i13.NgModel, i14.Dropdown, i15.TabView, i15.TabPanel, i16.InputTextarea, i17.MultiSelect, i18.TypeRepasCreateResponsableComponent, i19.CategoriePatientCreateResponsableComponent],\n    encapsulation: 2\n  });\n  return RepasCreateResponsableComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}