{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let RoleService = /*#__PURE__*/(() => {\n  class RoleService {\n    constructor(http) {\n      this.http = http;\n      this.API = environment.apiUrl;\n      this._roles = [];\n      this._role = new BehaviorSubject('');\n      this.role$ = this._role.asObservable();\n    }\n\n    findAll() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const roles = yield this.http.get(this.API + \"roles/\").pipe(take(1)).toPromise();\n        this._roles = roles;\n      });\n    }\n\n    isPermitted(pojo, action) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const role = yield this.role$.pipe(take(1)).toPromise();\n        if (1 + 1 == 2) return true;\n        if (role.toLocaleLowerCase() === 'superadmin') return true;\n        const foundRole = this.roles.find(r => \"ROLE_\" + role.toUpperCase() == r.authority);\n        let permissions;\n\n        if (foundRole) {\n          permissions = foundRole.permissions.map(permission => permission.name).filter(name => name.split('.')[0].toLocaleLowerCase() == pojo.toLocaleLowerCase()).filter(name => name.split('.')[1] == action);\n        }\n\n        return permissions ? permissions.length > 0 ? true : false : false;\n      });\n    }\n\n    get roles() {\n      return this._roles;\n    }\n\n    set roles(roles) {\n      this._roles = roles;\n    }\n\n  }\n\n  RoleService.ɵfac = function RoleService_Factory(t) {\n    return new (t || RoleService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  RoleService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RoleService,\n    factory: RoleService.ɵfac,\n    providedIn: 'root'\n  });\n  return RoleService;\n})();","map":null,"metadata":{},"sourceType":"module"}