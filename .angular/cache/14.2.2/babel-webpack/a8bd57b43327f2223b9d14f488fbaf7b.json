{"ast":null,"code":"import { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, NgZone, Input, Output, ViewChild, ChangeDetectorRef, ContentChildren, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { MessageService, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { RippleModule } from 'primeng/ripple';\nimport { trigger, state, style, transition, animate, query, animateChild } from '@angular/animations';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'primeng/ripple';\nimport * as ɵngcc3 from 'primeng/api';\nconst _c0 = [\"container\"];\n\nconst _c1 = function (a0, a1, a2, a3) {\n  return {\n    \"pi-info-circle\": a0,\n    \"pi-exclamation-triangle\": a1,\n    \"pi-times-circle\": a2,\n    \"pi-check\": a3\n  };\n};\n\nfunction ToastItem_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"span\", 6);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 7)(3, \"div\", 8);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 9);\n    ɵngcc0.ɵɵtext(6);\n    ɵngcc0.ɵɵelementEnd()();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMap(\"p-toast-message-icon pi\" + (ctx_r1.message.icon ? \" \" + ctx_r1.message.icon : \"\"));\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction4(5, _c1, ctx_r1.message.severity == \"info\", ctx_r1.message.severity == \"warn\", ctx_r1.message.severity == \"error\", ctx_r1.message.severity == \"success\"));\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.message.summary);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.message.detail);\n  }\n}\n\nfunction ToastItem_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function ToastItem_button_4_Template_button_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r4.onCloseIconClick($event));\n    })(\"keydown.enter\", function ToastItem_button_4_Template_button_keydown_enter_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r6.onCloseIconClick($event));\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction ToastItem_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c2 = function (a0, a1, a2, a3) {\n  return {\n    showTransformParams: a0,\n    hideTransformParams: a1,\n    showTransitionParams: a2,\n    hideTransitionParams: a3\n  };\n};\n\nconst _c3 = function (a1) {\n  return {\n    value: \"visible\",\n    params: a1\n  };\n};\n\nconst _c4 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction Toast_p_toastItem_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"p-toastItem\", 3);\n    ɵngcc0.ɵɵlistener(\"onClose\", function Toast_p_toastItem_2_Template_p_toastItem_onClose_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r4.onMessageClose($event));\n    })(\"@toastAnimation.start\", function Toast_p_toastItem_2_Template_p_toastItem_animation_toastAnimation_start_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r6.onAnimationStart($event));\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const msg_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"message\", msg_r2)(\"index\", i_r3)(\"template\", ctx_r1.template)(\"@toastAnimation\", undefined)(\"showTransformOptions\", ctx_r1.showTransformOptions)(\"hideTransformOptions\", ctx_r1.hideTransformOptions)(\"showTransitionOptions\", ctx_r1.showTransitionOptions)(\"hideTransitionOptions\", ctx_r1.hideTransitionOptions);\n  }\n}\n\nlet ToastItem = /*#__PURE__*/(() => {\n  class ToastItem {\n    constructor(zone) {\n      this.zone = zone;\n      this.onClose = new EventEmitter();\n    }\n\n    ngAfterViewInit() {\n      this.initTimeout();\n    }\n\n    initTimeout() {\n      if (!this.message.sticky) {\n        this.zone.runOutsideAngular(() => {\n          this.timeout = setTimeout(() => {\n            this.onClose.emit({\n              index: this.index,\n              message: this.message\n            });\n          }, this.message.life || 3000);\n        });\n      }\n    }\n\n    clearTimeout() {\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = null;\n      }\n    }\n\n    onMouseEnter() {\n      this.clearTimeout();\n    }\n\n    onMouseLeave() {\n      this.initTimeout();\n    }\n\n    onCloseIconClick(event) {\n      this.clearTimeout();\n      this.onClose.emit({\n        index: this.index,\n        message: this.message\n      });\n      event.preventDefault();\n    }\n\n    ngOnDestroy() {\n      this.clearTimeout();\n    }\n\n  }\n\n  ToastItem.ɵfac = function ToastItem_Factory(t) {\n    return new (t || ToastItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n\n  ToastItem.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ToastItem,\n    selectors: [[\"p-toastItem\"]],\n    viewQuery: function ToastItem_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n      }\n    },\n    inputs: {\n      message: \"message\",\n      index: \"index\",\n      template: \"template\",\n      showTransformOptions: \"showTransformOptions\",\n      hideTransformOptions: \"hideTransformOptions\",\n      showTransitionOptions: \"showTransitionOptions\",\n      hideTransitionOptions: \"hideTransitionOptions\"\n    },\n    outputs: {\n      onClose: \"onClose\"\n    },\n    decls: 6,\n    vars: 16,\n    consts: [[1, \"p-toast-message\", 3, \"ngClass\", \"mouseenter\", \"mouseleave\"], [\"container\", \"\"], [\"role\", \"alert\", \"aria-live\", \"assertive\", \"aria-atomic\", \"true\", 1, \"p-toast-message-content\"], [4, \"ngIf\"], [\"type\", \"button\", \"class\", \"p-toast-icon-close p-link\", \"pRipple\", \"\", 3, \"click\", \"keydown.enter\", 4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngClass\"], [1, \"p-toast-message-text\"], [1, \"p-toast-summary\"], [1, \"p-toast-detail\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-toast-icon-close\", \"p-link\", 3, \"click\", \"keydown.enter\"], [1, \"p-toast-icon-close-icon\", \"pi\", \"pi-times\"]],\n    template: function ToastItem_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"mouseenter\", function ToastItem_Template_div_mouseenter_0_listener() {\n          return ctx.onMouseEnter();\n        })(\"mouseleave\", function ToastItem_Template_div_mouseleave_0_listener() {\n          return ctx.onMouseLeave();\n        });\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(3, ToastItem_ng_container_3_Template, 7, 10, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, ToastItem_button_4_Template, 2, 0, \"button\", 4);\n        ɵngcc0.ɵɵtemplate(5, ToastItem_ng_container_5_Template, 1, 0, \"ng-container\", 5);\n        ɵngcc0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", \"p-toast-message-\" + ctx.message.severity)(\"@messageState\", ɵngcc0.ɵɵpureFunction1(12, _c3, ɵngcc0.ɵɵpureFunction4(7, _c2, ctx.showTransformOptions, ctx.hideTransformOptions, ctx.showTransitionOptions, ctx.hideTransitionOptions)));\n        ɵngcc0.ɵɵattribute(\"id\", ctx.message.id);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.template);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.message.closable !== false);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.template)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(14, _c4, ctx.message));\n      }\n    },\n    dependencies: [ɵngcc1.NgClass, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, ɵngcc2.Ripple],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('messageState', [state('visible', style({\n        transform: 'translateY(0)',\n        opacity: 1\n      })), transition('void => *', [style({\n        transform: '{{showTransformParams}}',\n        opacity: 0\n      }), animate('{{showTransitionParams}}')]), transition('* => void', [animate('{{hideTransitionParams}}', style({\n        height: 0,\n        opacity: 0,\n        transform: '{{hideTransformParams}}'\n      }))])])]\n    },\n    changeDetection: 0\n  });\n  return ToastItem;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet Toast = /*#__PURE__*/(() => {\n  class Toast {\n    constructor(messageService, cd) {\n      this.messageService = messageService;\n      this.cd = cd;\n      this.autoZIndex = true;\n      this.baseZIndex = 0;\n      this.position = 'top-right';\n      this.preventOpenDuplicates = false;\n      this.preventDuplicates = false;\n      this.showTransformOptions = 'translateY(100%)';\n      this.hideTransformOptions = 'translateY(-100%)';\n      this.showTransitionOptions = '300ms ease-out';\n      this.hideTransitionOptions = '250ms ease-in';\n      this.onClose = new EventEmitter();\n    }\n\n    ngOnInit() {\n      this.messageSubscription = this.messageService.messageObserver.subscribe(messages => {\n        if (messages) {\n          if (messages instanceof Array) {\n            const filteredMessages = messages.filter(m => this.canAdd(m));\n            this.add(filteredMessages);\n          } else if (this.canAdd(messages)) {\n            this.add([messages]);\n          }\n        }\n      });\n      this.clearSubscription = this.messageService.clearObserver.subscribe(key => {\n        if (key) {\n          if (this.key === key) {\n            this.messages = null;\n          }\n        } else {\n          this.messages = null;\n        }\n\n        this.cd.markForCheck();\n      });\n    }\n\n    add(messages) {\n      this.messages = this.messages ? [...this.messages, ...messages] : [...messages];\n\n      if (this.preventDuplicates) {\n        this.messagesArchieve = this.messagesArchieve ? [...this.messagesArchieve, ...messages] : [...messages];\n      }\n\n      this.cd.markForCheck();\n    }\n\n    canAdd(message) {\n      let allow = this.key === message.key;\n\n      if (allow && this.preventOpenDuplicates) {\n        allow = !this.containsMessage(this.messages, message);\n      }\n\n      if (allow && this.preventDuplicates) {\n        allow = !this.containsMessage(this.messagesArchieve, message);\n      }\n\n      return allow;\n    }\n\n    containsMessage(collection, message) {\n      if (!collection) {\n        return false;\n      }\n\n      return collection.find(m => {\n        return m.summary === message.summary && m.detail == message.detail && m.severity === message.severity;\n      }) != null;\n    }\n\n    ngAfterContentInit() {\n      this.templates.forEach(item => {\n        switch (item.getType()) {\n          case 'message':\n            this.template = item.template;\n            break;\n\n          default:\n            this.template = item.template;\n            break;\n        }\n      });\n    }\n\n    onMessageClose(event) {\n      this.messages.splice(event.index, 1);\n      this.onClose.emit({\n        message: event.message\n      });\n      this.cd.detectChanges();\n    }\n\n    onAnimationStart(event) {\n      if (event.fromState === 'void' && this.autoZIndex) {\n        this.containerViewChild.nativeElement.style.zIndex = String(this.baseZIndex + ++DomHandler.zindex);\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.messageSubscription) {\n        this.messageSubscription.unsubscribe();\n      }\n\n      if (this.clearSubscription) {\n        this.clearSubscription.unsubscribe();\n      }\n    }\n\n  }\n\n  Toast.ɵfac = function Toast_Factory(t) {\n    return new (t || Toast)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.MessageService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  Toast.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: Toast,\n    selectors: [[\"p-toast\"]],\n    contentQueries: function Toast_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    viewQuery: function Toast_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n      }\n    },\n    inputs: {\n      autoZIndex: \"autoZIndex\",\n      baseZIndex: \"baseZIndex\",\n      position: \"position\",\n      preventOpenDuplicates: \"preventOpenDuplicates\",\n      preventDuplicates: \"preventDuplicates\",\n      showTransformOptions: \"showTransformOptions\",\n      hideTransformOptions: \"hideTransformOptions\",\n      showTransitionOptions: \"showTransitionOptions\",\n      hideTransitionOptions: \"hideTransitionOptions\",\n      key: \"key\",\n      style: \"style\",\n      styleClass: \"styleClass\"\n    },\n    outputs: {\n      onClose: \"onClose\"\n    },\n    decls: 3,\n    vars: 5,\n    consts: [[3, \"ngClass\", \"ngStyle\"], [\"container\", \"\"], [3, \"message\", \"index\", \"template\", \"showTransformOptions\", \"hideTransformOptions\", \"showTransitionOptions\", \"hideTransitionOptions\", \"onClose\", 4, \"ngFor\", \"ngForOf\"], [3, \"message\", \"index\", \"template\", \"showTransformOptions\", \"hideTransformOptions\", \"showTransitionOptions\", \"hideTransitionOptions\", \"onClose\"]],\n    template: function Toast_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵtemplate(2, Toast_p_toastItem_2_Template, 1, 8, \"p-toastItem\", 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.styleClass);\n        ɵngcc0.ɵɵproperty(\"ngClass\", \"p-toast p-component p-toast-\" + ctx.position)(\"ngStyle\", ctx.style);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.messages);\n      }\n    },\n    dependencies: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgStyle, ToastItem],\n    styles: [\".p-toast{position:fixed;width:25rem}.p-toast-message{overflow:hidden}.p-toast-message-content{align-items:flex-start;display:flex}.p-toast-message-text{flex:1 1 auto}.p-toast-top-right{right:20px;top:20px}.p-toast-top-left{left:20px;top:20px}.p-toast-bottom-left{bottom:20px;left:20px}.p-toast-bottom-right{bottom:20px;right:20px}.p-toast-top-center{left:50%;margin-left:-10em;top:20px}.p-toast-bottom-center{bottom:20px;left:50%;margin-left:-10em}.p-toast-center{left:50%;min-width:20vw;top:50%;transform:translate(-50%,-50%)}.p-toast-icon-close{align-items:center;display:flex;justify-content:center;overflow:hidden;position:relative}.p-toast-icon-close.p-link{cursor:pointer}\"],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('toastAnimation', [transition(':enter, :leave', [query('@*', animateChild())])])]\n    },\n    changeDetection: 0\n  });\n  return Toast;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ToastModule = /*#__PURE__*/(() => {\n  class ToastModule {}\n\n  ToastModule.ɵfac = function ToastModule_Factory(t) {\n    return new (t || ToastModule)();\n  };\n\n  ToastModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ToastModule\n  });\n  ToastModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [CommonModule, RippleModule, SharedModule]\n  });\n  return ToastModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ToastModule, {\n    declarations: function () {\n      return [Toast, ToastItem];\n    },\n    imports: function () {\n      return [CommonModule, RippleModule];\n    },\n    exports: function () {\n      return [Toast, SharedModule];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Toast, ToastItem, ToastModule }; //# sourceMappingURL=primeng-toast.js.map","map":null,"metadata":{},"sourceType":"module"}