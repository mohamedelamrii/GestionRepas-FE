{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { TypeRepasDto } from '../model/TypeRepas.model';\nimport { TypeRepasCriteria } from '../criteria/TypeRepasCriteria.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./role.service\";\nexport let TypeRepasService = /*#__PURE__*/(() => {\n  class TypeRepasService {\n    constructor(http, roleService) {\n      this.http = http;\n      this.roleService = roleService;\n      this.API = '';\n      this.editTypeRepas$ = new BehaviorSubject(false);\n      this.role$ = this.roleService.role$;\n      this.role$.subscribe(role => {\n        this.API = environment.apiUrl + role.toLowerCase() + '/typeRepas/';\n      });\n    }\n\n    findPaginatedByCriteria(criteria) {\n      return this.http.post(this.API + 'find-paginated-by-criteria', criteria);\n    }\n\n    findAll() {\n      return this.http.get(this.API);\n    }\n\n    save() {\n      return this.http.post(this.API, this.selectedTypeRepas);\n    }\n\n    delete(typeRepas) {\n      return this.http.delete(this.API + 'id/' + typeRepas.id);\n    }\n\n    edit() {\n      return this.http.put(this.API, this.selectedTypeRepas);\n    }\n\n    findByCriteria(typeRepas) {\n      return this.http.post(this.API + 'find-by-criteria', typeRepas);\n    }\n\n    findByIdWithAssociatedList(typeRepas) {\n      return this.http.get(this.API + 'id/' + typeRepas.id);\n    }\n\n    deleteMultiple() {\n      return this.http.post(this.API + 'multiple', this.typeRepasSelections);\n    }\n\n    get typeRepass() {\n      if (this._typeRepass == null) {\n        this._typeRepass = new Array();\n      }\n\n      return this._typeRepass;\n    }\n\n    set typeRepass(value) {\n      this._typeRepass = value;\n    }\n\n    get selectedTypeRepas() {\n      if (this._selectedTypeRepas == null) {\n        this._selectedTypeRepas = new TypeRepasDto();\n      }\n\n      return this._selectedTypeRepas;\n    }\n\n    set selectedTypeRepas(value) {\n      this._selectedTypeRepas = value;\n    }\n\n    get typeRepasSelections() {\n      if (this._typeRepasSelections == null) {\n        this._typeRepasSelections = new Array();\n      }\n\n      return this._typeRepasSelections;\n    }\n\n    set typeRepasSelections(value) {\n      this._typeRepasSelections = value;\n    }\n\n    get createTypeRepasDialog() {\n      return this._createTypeRepasDialog;\n    }\n\n    set createTypeRepasDialog(value) {\n      this._createTypeRepasDialog = value;\n    }\n\n    get editTypeRepasDialog() {\n      return this._editTypeRepasDialog;\n    }\n\n    set editTypeRepasDialog(value) {\n      this._editTypeRepasDialog = value;\n    }\n\n    get viewTypeRepasDialog() {\n      return this._viewTypeRepasDialog;\n    }\n\n    set viewTypeRepasDialog(value) {\n      this._viewTypeRepasDialog = value;\n    }\n\n    get search() {\n      if (this._search == null) {\n        this._search = new TypeRepasCriteria();\n      }\n\n      return this._search;\n    }\n\n    set search(value) {\n      this._search = value;\n    }\n\n  }\n\n  TypeRepasService.ɵfac = function TypeRepasService_Factory(t) {\n    return new (t || TypeRepasService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.RoleService));\n  };\n\n  TypeRepasService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TypeRepasService,\n    factory: TypeRepasService.ɵfac,\n    providedIn: 'root'\n  });\n  return TypeRepasService;\n})();","map":null,"metadata":{},"sourceType":"module"}