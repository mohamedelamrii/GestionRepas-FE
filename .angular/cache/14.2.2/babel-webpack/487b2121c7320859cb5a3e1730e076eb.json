{"ast":null,"code":"import { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./app.component\";\nimport * as i2 from \"./app.main.component\";\nimport * as i3 from \"./controller/service/role.service\";\nimport * as i4 from \"./controller/service/Auth.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"primeng/panelmenu\";\n\nfunction AppMenuComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"a\", 5);\n    i0.ɵɵlistener(\"click\", function AppMenuComponent_div_2_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.appMain.onProfileClick($event));\n    });\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"div\", 7)(4, \"span\", 8);\n    i0.ɵɵtext(5, \"Arlene Welch\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 9);\n    i0.ɵɵtext(7, \"Design Ops\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(8, \"ul\", 10)(9, \"li\")(10, \"a\", 11);\n    i0.ɵɵelement(11, \"i\", 12);\n    i0.ɵɵelementStart(12, \"span\");\n    i0.ɵɵtext(13, \"Profile\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(14, \"li\")(15, \"a\", 11);\n    i0.ɵɵelement(16, \"i\", 13);\n    i0.ɵɵelementStart(17, \"span\");\n    i0.ɵɵtext(18, \"Settings\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(19, \"li\")(20, \"a\", 11);\n    i0.ɵɵelement(21, \"i\", 14);\n    i0.ɵɵelementStart(22, \"span\");\n    i0.ɵɵtext(23, \"Messages\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(24, \"li\")(25, \"a\", 11);\n    i0.ɵɵelement(26, \"i\", 15);\n    i0.ɵɵelementStart(27, \"span\");\n    i0.ɵɵtext(28, \"Notifications\");\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"@inline\", !ctx_r0.appMain.isSlim() ? ctx_r0.appMain.inlineUserMenuActive ? \"visibleAnimated\" : \"hiddenAnimated\" : ctx_r0.appMain.inlineUserMenuActive ? \"visible\" : \"hidden\");\n  }\n}\n\nconst _c0 = function () {\n  return {\n    \"width\": \"300px\"\n  };\n};\n\nexport let AppMenuComponent = /*#__PURE__*/(() => {\n  class AppMenuComponent {\n    constructor(app, appMain, roleService, authService, router) {\n      this.app = app;\n      this.appMain = appMain;\n      this.roleService = roleService;\n      this.authService = authService;\n      this.router = router;\n    }\n\n    ngOnInit() {\n      this.modeladmin = [{\n        label: 'Configuration',\n        icon: 'pi pi-wallet',\n        items: [{\n          label: 'Liste jour',\n          icon: 'pi pi-fw pi-plus-circle',\n          routerLink: ['/app/admin/repas/jour/list']\n        }]\n      }, {\n        label: 'Gestion Repas',\n        icon: 'pi pi-wallet',\n        items: [{\n          label: 'Liste repas categorie patient',\n          icon: 'pi pi-fw pi-plus-circle',\n          routerLink: ['/app/admin/repas/repas-categorie-patient/list']\n        }, {\n          label: 'Liste repas',\n          icon: 'pi pi-fw pi-plus-circle',\n          routerLink: ['/app/admin/repas/repas/list']\n        }, {\n          label: 'Liste type repas',\n          icon: 'pi pi-fw pi-plus-circle',\n          routerLink: ['/app/admin/repas/type-repas/list']\n        }]\n      }, {\n        label: 'Gestion Patient',\n        icon: 'pi pi-wallet',\n        items: [{\n          label: 'Liste patient',\n          icon: 'pi pi-fw pi-plus-circle',\n          routerLink: ['/app/admin/repas/patient/list']\n        }, {\n          label: 'Liste categorie patient',\n          icon: 'pi pi-fw pi-plus-circle',\n          routerLink: ['/app/admin/repas/categorie-patient/list']\n        }]\n      }, {\n        label: 'Gestion Planning',\n        icon: 'pi pi-wallet',\n        items: [{\n          label: 'Liste responsable planning',\n          icon: 'pi pi-fw pi-plus-circle',\n          routerLink: ['/app/admin/repas/responsable-planning/list']\n        }, {\n          label: 'Liste planning repas',\n          icon: 'pi pi-fw pi-plus-circle',\n          routerLink: ['/app/admin/repas/planning-repas/list']\n        }, {\n          label: 'Liste planning execution',\n          icon: 'pi pi-fw pi-plus-circle',\n          routerLink: ['/app/admin/repas/planning-execution/list']\n        }, {\n          label: 'Liste planning',\n          icon: 'pi pi-fw pi-plus-circle',\n          routerLink: ['/app/admin/repas/planning/list']\n        }]\n      }];\n      this.modelresponsable = [{\n        label: 'Configuration',\n        icon: 'pi pi-wallet',\n        items: [{\n          label: 'Liste jour',\n          icon: 'pi pi-fw pi-plus-circle',\n          routerLink: ['/app/responsable/repas/jour/list']\n        }]\n      }, {\n        label: 'Gestion Repas',\n        icon: 'pi pi-wallet',\n        items: [{\n          label: 'Liste repas categorie patient',\n          icon: 'pi pi-fw pi-plus-circle',\n          routerLink: ['/app/responsable/repas/repas-categorie-patient/list']\n        }, {\n          label: 'Liste repas',\n          icon: 'pi pi-fw pi-plus-circle',\n          routerLink: ['/app/responsable/repas/repas/list']\n        }, {\n          label: 'Liste type repas',\n          icon: 'pi pi-fw pi-plus-circle',\n          routerLink: ['/app/responsable/repas/type-repas/list']\n        }]\n      }, {\n        label: 'Gestion Patient',\n        icon: 'pi pi-wallet',\n        items: [{\n          label: 'Liste patient',\n          icon: 'pi pi-fw pi-plus-circle',\n          routerLink: ['/app/responsable/repas/patient/list']\n        }, {\n          label: 'Liste categorie patient',\n          icon: 'pi pi-fw pi-plus-circle',\n          routerLink: ['/app/responsable/repas/categorie-patient/list']\n        }]\n      }, {\n        label: 'Gestion Planning',\n        icon: 'pi pi-wallet',\n        items: [{\n          label: 'Liste responsable planning',\n          icon: 'pi pi-fw pi-plus-circle',\n          routerLink: ['/app/responsable/repas/responsable-planning/list']\n        }, {\n          label: 'Liste planning repas',\n          icon: 'pi pi-fw pi-plus-circle',\n          routerLink: ['/app/responsable/repas/planning-repas/list']\n        }, {\n          label: 'Liste planning execution',\n          icon: 'pi pi-fw pi-plus-circle',\n          routerLink: ['/app/responsable/repas/planning-execution/list']\n        }, {\n          label: 'Liste planning',\n          icon: 'pi pi-fw pi-plus-circle',\n          routerLink: ['/app/responsable/repas/planning/list']\n        }]\n      }];\n\n      if (this.authService.authenticated) {\n        if (this.authService.authenticatedUser.roles) {\n          this.authService.authenticatedUser.roles.forEach(role => {\n            const roleName = this.getRole(role);\n\n            this.roleService._role.next(roleName.toUpperCase());\n\n            eval('this.model = this.model' + this.getRole(role));\n          });\n        }\n      }\n    }\n\n    getRole(text) {\n      const [role, ...rest] = text.split('_');\n      return rest.join('').toLowerCase();\n    }\n\n    onMenuClick(event) {\n      this.appMain.onMenuClick(event);\n    }\n\n  }\n\n  AppMenuComponent.ɵfac = function AppMenuComponent_Factory(t) {\n    return new (t || AppMenuComponent)(i0.ɵɵdirectiveInject(i1.AppComponent), i0.ɵɵdirectiveInject(i2.AppMainComponent), i0.ɵɵdirectiveInject(i3.RoleService), i0.ɵɵdirectiveInject(i4.AuthService), i0.ɵɵdirectiveInject(i5.Router));\n  };\n\n  AppMenuComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppMenuComponent,\n    selectors: [[\"app-menu\"]],\n    decls: 4,\n    vars: 5,\n    consts: [[1, \"layout-menu-container\", 3, \"click\"], [1, \"menu-scroll-content\"], [\"class\", \"layout-profile\", 4, \"ngIf\"], [3, \"model\"], [1, \"layout-profile\"], [1, \"layout-profile-button\", 3, \"click\"], [\"src\", \"assets/layout/images/avatar.png\", \"alt\", \"roma-layout\"], [1, \"layout-profile-userinfo\"], [1, \"layout-profile-name\"], [1, \"layout-profile-role\"], [1, \"layout-profile-menu\"], [\"href\", \"#\", \"pRipple\", \"\"], [1, \"pi\", \"pi-fw\", \"pi-user\"], [1, \"pi\", \"pi-fw\", \"pi-cog\"], [1, \"pi\", \"pi-fw\", \"pi-envelope\"], [1, \"pi\", \"pi-fw\", \"pi-bell\"]],\n    template: function AppMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"click\", function AppMenuComponent_Template_div_click_0_listener($event) {\n          return ctx.onMenuClick($event);\n        });\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵtemplate(2, AppMenuComponent_div_2_Template, 29, 1, \"div\", 2);\n        i0.ɵɵelement(3, \"p-panelMenu\", 3);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.app.inlineUser && !ctx.appMain.isHorizontal());\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(4, _c0));\n        i0.ɵɵproperty(\"model\", ctx.model);\n      }\n    },\n    dependencies: [i6.NgIf, i7.PanelMenu],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('inline', [state('hidden', style({\n        height: '0px',\n        overflow: 'hidden'\n      })), state('visible', style({\n        height: '*'\n      })), state('hiddenAnimated', style({\n        height: '0px',\n        overflow: 'hidden'\n      })), state('visibleAnimated', style({\n        height: '*'\n      })), transition('visibleAnimated => hiddenAnimated', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')), transition('hiddenAnimated => visibleAnimated', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))])]\n    }\n  });\n  return AppMenuComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}