{"ast":null,"code":"import { Component, Inject, forwardRef, ViewContainerRef, ChangeDetectorRef, Input, ContentChildren, EventEmitter, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, ViewChild, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { RippleModule } from 'primeng/ripple';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'primeng/tooltip';\nimport * as ɵngcc3 from 'primeng/ripple';\n\nfunction TabPanel_div_0_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TabPanel_div_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, TabPanel_div_0_ng_container_2_ng_container_1_Template, 1, 0, \"ng-container\", 3);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.contentTemplate);\n  }\n}\n\nfunction TabPanel_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵprojection(1);\n    ɵngcc0.ɵɵtemplate(2, TabPanel_div_0_ng_container_2_Template, 2, 1, \"ng-container\", 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"hidden\", !ctx_r0.selected);\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r0.id)(\"aria-hidden\", !ctx_r0.selected)(\"aria-labelledby\", ctx_r0.id + \"-label\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.contentTemplate && (ctx_r0.cache ? ctx_r0.loaded : ctx_r0.selected));\n  }\n}\n\nconst _c0 = [\"*\"];\nconst _c1 = [\"navbar\"];\nconst _c2 = [\"inkbar\"];\n\nfunction TabView_ng_template_3_li_0_ng_container_2_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 16);\n  }\n\n  if (rf & 2) {\n    const tab_r3 = ɵngcc0.ɵɵnextContext(3).$implicit;\n    ɵngcc0.ɵɵproperty(\"ngClass\", tab_r3.leftIcon);\n  }\n}\n\nfunction TabView_ng_template_3_li_0_ng_container_2_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 17);\n  }\n\n  if (rf & 2) {\n    const tab_r3 = ɵngcc0.ɵɵnextContext(3).$implicit;\n    ɵngcc0.ɵɵproperty(\"ngClass\", tab_r3.rightIcon);\n  }\n}\n\nfunction TabView_ng_template_3_li_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, TabView_ng_template_3_li_0_ng_container_2_span_1_Template, 1, 1, \"span\", 13);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 14);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, TabView_ng_template_3_li_0_ng_container_2_span_4_Template, 1, 1, \"span\", 15);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const tab_r3 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r3.leftIcon);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(tab_r3.header);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r3.rightIcon);\n  }\n}\n\nfunction TabView_ng_template_3_li_0_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TabView_ng_template_3_li_0_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"span\", 18);\n    ɵngcc0.ɵɵlistener(\"click\", function TabView_ng_template_3_li_0_span_4_Template_span_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r15);\n      const tab_r3 = ɵngcc0.ɵɵnextContext(2).$implicit;\n      const ctx_r13 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r13.close($event, tab_r3));\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nconst _c3 = function (a0, a1) {\n  return {\n    \"p-highlight\": a0,\n    \"p-disabled\": a1\n  };\n};\n\nfunction TabView_ng_template_3_li_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 8)(1, \"a\", 9);\n    ɵngcc0.ɵɵlistener(\"click\", function TabView_ng_template_3_li_0_Template_a_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r18);\n      const tab_r3 = ɵngcc0.ɵɵnextContext().$implicit;\n      const ctx_r16 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r16.open($event, tab_r3));\n    })(\"keydown.enter\", function TabView_ng_template_3_li_0_Template_a_keydown_enter_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r18);\n      const tab_r3 = ɵngcc0.ɵɵnextContext().$implicit;\n      const ctx_r19 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r19.open($event, tab_r3));\n    });\n    ɵngcc0.ɵɵtemplate(2, TabView_ng_template_3_li_0_ng_container_2_Template, 5, 3, \"ng-container\", 10);\n    ɵngcc0.ɵɵtemplate(3, TabView_ng_template_3_li_0_ng_container_3_Template, 1, 0, \"ng-container\", 11);\n    ɵngcc0.ɵɵtemplate(4, TabView_ng_template_3_li_0_span_4_Template, 1, 0, \"span\", 12);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const tab_r3 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵclassMap(tab_r3.headerStyleClass);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(16, _c3, tab_r3.selected, tab_r3.disabled))(\"ngStyle\", tab_r3.headerStyle);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"pTooltip\", tab_r3.tooltip)(\"tooltipPosition\", tab_r3.tooltipPosition)(\"positionStyle\", tab_r3.tooltipPositionStyle)(\"tooltipStyleClass\", tab_r3.tooltipStyleClass);\n    ɵngcc0.ɵɵattribute(\"id\", tab_r3.id + \"-label\")(\"aria-selected\", tab_r3.selected)(\"aria-controls\", tab_r3.id)(\"aria-selected\", tab_r3.selected)(\"tabindex\", tab_r3.disabled ? null : \"0\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r3.headerTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", tab_r3.headerTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r3.closable);\n  }\n}\n\nfunction TabView_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TabView_ng_template_3_li_0_Template, 5, 19, \"li\", 7);\n  }\n\n  if (rf & 2) {\n    const tab_r3 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r3.closed);\n  }\n}\n\nlet idx = 0;\nlet TabPanel = /*#__PURE__*/(() => {\n  class TabPanel {\n    constructor(tabView, viewContainer, cd) {\n      this.viewContainer = viewContainer;\n      this.cd = cd;\n      this.cache = true;\n      this.tooltipPosition = 'top';\n      this.tooltipPositionStyle = 'absolute';\n      this.id = `p-tabpanel-${idx++}`;\n      this.tabView = tabView;\n    }\n\n    ngAfterContentInit() {\n      this.templates.forEach(item => {\n        switch (item.getType()) {\n          case 'header':\n            this.headerTemplate = item.template;\n            break;\n\n          case 'content':\n            this.contentTemplate = item.template;\n            break;\n\n          default:\n            this.contentTemplate = item.template;\n            break;\n        }\n      });\n    }\n\n    get selected() {\n      return this._selected;\n    }\n\n    set selected(val) {\n      this._selected = val;\n\n      if (!this.loaded) {\n        this.cd.detectChanges();\n      }\n\n      if (val) this.loaded = true;\n    }\n\n    get disabled() {\n      return this._disabled;\n    }\n\n    set disabled(disabled) {\n      this._disabled = disabled;\n      this.tabView.cd.markForCheck();\n    }\n\n    get header() {\n      return this._header;\n    }\n\n    set header(header) {\n      this._header = header;\n      this.tabView.cd.markForCheck();\n    }\n\n    ngOnDestroy() {\n      this.view = null;\n    }\n\n  }\n\n  TabPanel.ɵfac = function TabPanel_Factory(t) {\n    return new (t || TabPanel)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => TabView)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  TabPanel.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TabPanel,\n    selectors: [[\"p-tabPanel\"]],\n    contentQueries: function TabPanel_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    inputs: {\n      cache: \"cache\",\n      tooltipPosition: \"tooltipPosition\",\n      tooltipPositionStyle: \"tooltipPositionStyle\",\n      selected: \"selected\",\n      disabled: \"disabled\",\n      header: \"header\",\n      closable: \"closable\",\n      headerStyle: \"headerStyle\",\n      headerStyleClass: \"headerStyleClass\",\n      leftIcon: \"leftIcon\",\n      rightIcon: \"rightIcon\",\n      tooltip: \"tooltip\",\n      tooltipStyleClass: \"tooltipStyleClass\"\n    },\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"p-tabview-panel\", \"role\", \"tabpanel\", 3, \"hidden\", 4, \"ngIf\"], [\"role\", \"tabpanel\", 1, \"p-tabview-panel\", 3, \"hidden\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\"]],\n    template: function TabPanel_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, TabPanel_div_0_Template, 3, 5, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.closed);\n      }\n    },\n    dependencies: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet],\n    encapsulation: 2\n  });\n  return TabPanel;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TabView = /*#__PURE__*/(() => {\n  class TabView {\n    constructor(el, cd) {\n      this.el = el;\n      this.cd = cd;\n      this.orientation = 'top';\n      this.onChange = new EventEmitter();\n      this.onClose = new EventEmitter();\n      this.activeIndexChange = new EventEmitter();\n    }\n\n    ngAfterContentInit() {\n      this.initTabs();\n      this.tabPanels.changes.subscribe(_ => {\n        this.initTabs();\n      });\n    }\n\n    ngAfterViewChecked() {\n      if (this.tabChanged) {\n        this.updateInkBar();\n        this.tabChanged = false;\n      }\n    }\n\n    initTabs() {\n      this.tabs = this.tabPanels.toArray();\n      let selectedTab = this.findSelectedTab();\n\n      if (!selectedTab && this.tabs.length) {\n        if (this.activeIndex != null && this.tabs.length > this.activeIndex) this.tabs[this.activeIndex].selected = true;else this.tabs[0].selected = true;\n        this.tabChanged = true;\n      }\n\n      this.cd.markForCheck();\n    }\n\n    open(event, tab) {\n      if (tab.disabled) {\n        if (event) {\n          event.preventDefault();\n        }\n\n        return;\n      }\n\n      if (!tab.selected) {\n        let selectedTab = this.findSelectedTab();\n\n        if (selectedTab) {\n          selectedTab.selected = false;\n        }\n\n        this.tabChanged = true;\n        tab.selected = true;\n        let selectedTabIndex = this.findTabIndex(tab);\n        this.preventActiveIndexPropagation = true;\n        this.activeIndexChange.emit(selectedTabIndex);\n        this.onChange.emit({\n          originalEvent: event,\n          index: selectedTabIndex\n        });\n      }\n\n      if (event) {\n        event.preventDefault();\n      }\n    }\n\n    close(event, tab) {\n      if (this.controlClose) {\n        this.onClose.emit({\n          originalEvent: event,\n          index: this.findTabIndex(tab),\n          close: () => {\n            this.closeTab(tab);\n          }\n        });\n      } else {\n        this.closeTab(tab);\n        this.onClose.emit({\n          originalEvent: event,\n          index: this.findTabIndex(tab)\n        });\n      }\n\n      event.stopPropagation();\n    }\n\n    closeTab(tab) {\n      if (tab.disabled) {\n        return;\n      }\n\n      if (tab.selected) {\n        this.tabChanged = true;\n        tab.selected = false;\n\n        for (let i = 0; i < this.tabs.length; i++) {\n          let tabPanel = this.tabs[i];\n\n          if (!tabPanel.closed && !tab.disabled) {\n            tabPanel.selected = true;\n            break;\n          }\n        }\n      }\n\n      tab.closed = true;\n    }\n\n    findSelectedTab() {\n      for (let i = 0; i < this.tabs.length; i++) {\n        if (this.tabs[i].selected) {\n          return this.tabs[i];\n        }\n      }\n\n      return null;\n    }\n\n    findTabIndex(tab) {\n      let index = -1;\n\n      for (let i = 0; i < this.tabs.length; i++) {\n        if (this.tabs[i] == tab) {\n          index = i;\n          break;\n        }\n      }\n\n      return index;\n    }\n\n    getBlockableElement() {\n      return this.el.nativeElement.children[0];\n    }\n\n    get activeIndex() {\n      return this._activeIndex;\n    }\n\n    set activeIndex(val) {\n      this._activeIndex = val;\n\n      if (this.preventActiveIndexPropagation) {\n        this.preventActiveIndexPropagation = false;\n        return;\n      }\n\n      if (this.tabs && this.tabs.length && this._activeIndex != null && this.tabs.length > this._activeIndex) {\n        this.findSelectedTab().selected = false;\n        this.tabs[this._activeIndex].selected = true;\n      }\n    }\n\n    updateInkBar() {\n      let tabHeader = DomHandler.findSingle(this.navbar.nativeElement, 'li.p-highlight');\n      this.inkbar.nativeElement.style.width = DomHandler.getWidth(tabHeader) + 'px';\n      this.inkbar.nativeElement.style.left = DomHandler.getOffset(tabHeader).left - DomHandler.getOffset(this.navbar.nativeElement).left + 'px';\n    }\n\n  }\n\n  TabView.ɵfac = function TabView_Factory(t) {\n    return new (t || TabView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  TabView.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TabView,\n    selectors: [[\"p-tabView\"]],\n    contentQueries: function TabView_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, TabPanel, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabPanels = _t);\n      }\n    },\n    viewQuery: function TabView_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c1, 5);\n        ɵngcc0.ɵɵviewQuery(_c2, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.navbar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inkbar = _t.first);\n      }\n    },\n    inputs: {\n      orientation: \"orientation\",\n      activeIndex: \"activeIndex\",\n      style: \"style\",\n      styleClass: \"styleClass\",\n      controlClose: \"controlClose\"\n    },\n    outputs: {\n      onChange: \"onChange\",\n      onClose: \"onClose\",\n      activeIndexChange: \"activeIndexChange\"\n    },\n    ngContentSelectors: _c0,\n    decls: 8,\n    vars: 5,\n    consts: [[3, \"ngClass\", \"ngStyle\"], [\"role\", \"tablist\", 1, \"p-tabview-nav\"], [\"navbar\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"p-tabview-ink-bar\"], [\"inkbar\", \"\"], [1, \"p-tabview-panels\"], [\"role\", \"presentation\", 3, \"ngClass\", \"ngStyle\", \"class\", 4, \"ngIf\"], [\"role\", \"presentation\", 3, \"ngClass\", \"ngStyle\"], [\"role\", \"tab\", \"pRipple\", \"\", 1, \"p-tabview-nav-link\", 3, \"pTooltip\", \"tooltipPosition\", \"positionStyle\", \"tooltipStyleClass\", \"click\", \"keydown.enter\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\"], [\"class\", \"p-tabview-close pi pi-times\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"p-tabview-left-icon\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"p-tabview-title\"], [\"class\", \"p-tabview-right-icon\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"p-tabview-left-icon\", 3, \"ngClass\"], [1, \"p-tabview-right-icon\", 3, \"ngClass\"], [1, \"p-tabview-close\", \"pi\", \"pi-times\", 3, \"click\"]],\n    template: function TabView_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0)(1, \"ul\", 1, 2);\n        ɵngcc0.ɵɵtemplate(3, TabView_ng_template_3_Template, 1, 1, \"ng-template\", 3);\n        ɵngcc0.ɵɵelement(4, \"li\", 4, 5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.styleClass);\n        ɵngcc0.ɵɵproperty(\"ngClass\", \"p-tabview p-component\")(\"ngStyle\", ctx.style);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.tabs);\n      }\n    },\n    dependencies: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, ɵngcc1.NgStyle, ɵngcc2.Tooltip, ɵngcc3.Ripple],\n    styles: [\".p-tabview-nav{display:flex;flex-wrap:wrap;list-style-type:none;margin:0;padding:0}.p-tabview-nav-link{-ms-user-select:none;-webkit-user-select:none;align-items:center;cursor:pointer;display:flex;overflow:hidden;position:relative;text-decoration:none;user-select:none}.p-tabview-ink-bar{display:none;z-index:1}.p-tabview-nav-link:focus{z-index:1}.p-tabview-title{line-height:1}.p-tabview-close{z-index:1}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return TabView;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TabViewModule = /*#__PURE__*/(() => {\n  class TabViewModule {}\n\n  TabViewModule.ɵfac = function TabViewModule_Factory(t) {\n    return new (t || TabViewModule)();\n  };\n\n  TabViewModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TabViewModule\n  });\n  TabViewModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [CommonModule, SharedModule, TooltipModule, RippleModule, SharedModule]\n  });\n  return TabViewModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TabViewModule, {\n    declarations: function () {\n      return [TabView, TabPanel];\n    },\n    imports: function () {\n      return [CommonModule, SharedModule, TooltipModule, RippleModule];\n    },\n    exports: function () {\n      return [TabView, TabPanel, SharedModule];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TabPanel, TabView, TabViewModule }; //# sourceMappingURL=primeng-tabview.js.map","map":null,"metadata":{},"sourceType":"module"}