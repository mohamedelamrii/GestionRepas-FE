{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { RepasDto } from '../model/Repas.model';\nimport { RepasCriteria } from '../criteria/RepasCriteria.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./role.service\";\nexport let RepasService = /*#__PURE__*/(() => {\n  class RepasService {\n    constructor(http, roleService) {\n      this.http = http;\n      this.roleService = roleService;\n      this.API = '';\n      this.editRepas$ = new BehaviorSubject(false);\n      this.role$ = this.roleService.role$;\n      this.role$.subscribe(role => {\n        this.API = environment.apiUrl + role.toLowerCase() + '/repas/';\n      });\n    }\n\n    findPaginatedByCriteria(criteria) {\n      return this.http.post(this.API + 'find-paginated-by-criteria', criteria);\n    }\n\n    findAll() {\n      return this.http.get(this.API);\n    }\n\n    save() {\n      return this.http.post(this.API, this.selectedRepas);\n    }\n\n    delete(repas) {\n      return this.http.delete(this.API + 'id/' + repas.id);\n    }\n\n    edit() {\n      return this.http.put(this.API, this.selectedRepas);\n    }\n\n    findByCriteria(repas) {\n      return this.http.post(this.API + 'find-by-criteria', repas);\n    }\n\n    findByIdWithAssociatedList(repas) {\n      return this.http.get(this.API + 'id/' + repas.id);\n    }\n\n    deleteMultiple() {\n      return this.http.post(this.API + 'multiple', this.repasSelections);\n    }\n\n    get repass() {\n      if (this._repass == null) {\n        this._repass = new Array();\n      }\n\n      return this._repass;\n    }\n\n    set repass(value) {\n      this._repass = value;\n    }\n\n    get selectedRepas() {\n      if (this._selectedRepas == null) {\n        this._selectedRepas = new RepasDto();\n      }\n\n      return this._selectedRepas;\n    }\n\n    set selectedRepas(value) {\n      this._selectedRepas = value;\n    }\n\n    get repasSelections() {\n      if (this._repasSelections == null) {\n        this._repasSelections = new Array();\n      }\n\n      return this._repasSelections;\n    }\n\n    set repasSelections(value) {\n      this._repasSelections = value;\n    }\n\n    get createRepasDialog() {\n      return this._createRepasDialog;\n    }\n\n    set createRepasDialog(value) {\n      this._createRepasDialog = value;\n    }\n\n    get editRepasDialog() {\n      return this._editRepasDialog;\n    }\n\n    set editRepasDialog(value) {\n      this._editRepasDialog = value;\n    }\n\n    get viewRepasDialog() {\n      return this._viewRepasDialog;\n    }\n\n    set viewRepasDialog(value) {\n      this._viewRepasDialog = value;\n    }\n\n    get search() {\n      if (this._search == null) {\n        this._search = new RepasCriteria();\n      }\n\n      return this._search;\n    }\n\n    set search(value) {\n      this._search = value;\n    }\n\n  }\n\n  RepasService.ɵfac = function RepasService_Factory(t) {\n    return new (t || RepasService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.RoleService));\n  };\n\n  RepasService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RepasService,\n    factory: RepasService.ɵfac,\n    providedIn: 'root'\n  });\n  return RepasService;\n})();","map":null,"metadata":{},"sourceType":"module"}